//
//  19951 - 태상이의 훈련소 생활.cpp
//  cpp
//
//  Created by 병욱 민 on 3/14/25.
//

#include <iostream>
#include <vector>

using namespace std;

#define FASTIO ios::sync_with_stdio(0); cin.tie(0);

int N, M;

int main() {
    FASTIO
    cin >> N >> M;
    vector<int> ground(N + 2, 0);
    for (int i = 1; i <= N; i++) {
        cin >> ground[i];
    }
    vector<int> W(N + 1, 0);
    for (int i = 0; i < M; i++) {
        int a, b, k;
        cin >> a >> b >> k;
        W[a] += k;
        W[b + 1] -= k;
    }
    
    for (int i = 2; i <= N; i++) {
        W[i] += W[i - 1];
    }
    
    for (int i = 1; i <= N; i++) {
        cout << ground[i] + W[i] << ' ';
    }
    return 0;
}

/*
 연병장의 흙을 옮기는 일을 주고 제대로 수행하지 못하면 징계를 내리려고 한다.
 
 연병장은 일렬로 이어진 N개의 칸으로 이루어져 있으며 각 칸마다 높이를 가지고 있고, 첫 번재 칸부터 순서대로 1번, 2번, 3번, ..., N번 칸으로 명칭이 붙어있다.
 조교들은 총 M명이 있으며, 각 조교들은 a번 칸부터 b번 칸까지 높이 K만큼 흙을 덮거나 파내라고 지시한다. (흙은 절대 부족하지 않다.)
 
 각 조교의 지시를 각각 수행하면, 다른 조교의 지시로 흙을 덮어둔 칸을 다시 파내기도 하는 비효율적인 일이 발생한다. 각 조교의 지시를 모아 연병장 각 칸의 최종 높이를 미리 구해 한 번에 일을 수행하려고 한다.
 조교들의 일을 지시한 뒤 연병장 각 칸의 높이를 구하자.
 
 a ~ b 사이 길이가 최대 N이므로 연병장 개별 칸에 모두 기록하는 방식으로 풀이할 경우, 시간복잡도 O(N * M): 10^10이므로 시간 초과가 발생한다.
 작업할 높이의 차이를 기록하는 배열 W을 선언한 후 각각의 지시마다 시작 칸에 k를 더해주고 마지막 칸 이후 -k를 해주는 방식으로 풀이한다. 이 때 시간복잡도는 O(M)이다.
 
 */
